{"ast":null,"code":"var _jsxFileName = \"/Users/matheusferreira/Desktop/desafio-contato-seguro/src/components/BookList/BooksList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\n// Ajuste conforme necessário\n\n// Ajuste conforme necessário\nimport useLocalStorage from '../../components/LocalStorage/useLocalStorage'; // Ajuste conforme necessário\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BooksList = () => {\n  _s();\n  const [books] = useLocalStorage('books', []);\n  const [authors] = useLocalStorage('authors', []);\n\n  // Defina a interface aqui se ainda não estiver definida em seus modelos\n\n  const [booksWithAuthors, setBooksWithAuthors] = useState([]);\n  useEffect(() => {\n    const mergedBooks = books.map(book => {\n      const author = authors.find(author => author.id === book.authorId);\n      return {\n        ...book,\n        authorName: author ? author.name : 'Autor desconhecido'\n      };\n    });\n    setBooksWithAuthors(mergedBooks);\n  }, [books, authors]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Lista de Livros\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Nome do Livro\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Autor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"N\\xFAmero de P\\xE1ginas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: booksWithAuthors.map((book, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: book.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: book.authorName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: book.pages || 'N/A'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(BooksList, \"r83g382TKnYn3ySeO8kBs6CNTGI=\", false, function () {\n  return [useLocalStorage, useLocalStorage];\n});\n_c = BooksList;\nexport default BooksList;\nvar _c;\n$RefreshReg$(_c, \"BooksList\");","map":{"version":3,"names":["React","useEffect","useState","useLocalStorage","jsxDEV","_jsxDEV","BooksList","_s","books","authors","booksWithAuthors","setBooksWithAuthors","mergedBooks","map","book","author","find","id","authorId","authorName","name","children","fileName","_jsxFileName","lineNumber","columnNumber","index","pages","_c","$RefreshReg$"],"sources":["/Users/matheusferreira/Desktop/desafio-contato-seguro/src/components/BookList/BooksList.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Author } from '../../models/Author'; // Ajuste conforme necessário\nimport { Book } from '../../models/Book'; // Ajuste conforme necessário\nimport useLocalStorage from '../../components/LocalStorage/useLocalStorage'; // Ajuste conforme necessário\n\nconst BooksList: React.FC = () => {\n  const [books] = useLocalStorage<Book[]>('books', []);\n  const [authors] = useLocalStorage<Author[]>('authors', []);\n\n  // Defina a interface aqui se ainda não estiver definida em seus modelos\n  interface BookWithAuthor extends Book {\n    authorName: string;\n  }\n\n  const [booksWithAuthors, setBooksWithAuthors] = useState<BookWithAuthor[]>([]);\n\n  useEffect(() => {\n    const mergedBooks = books.map(book => {\n      const author = authors.find(author => author.id === book.authorId);\n      return { ...book, authorName: author ? author.name : 'Autor desconhecido' };\n    });\n    setBooksWithAuthors(mergedBooks);\n  }, [books, authors]);\n\n  return (\n    <div>\n      <h2>Lista de Livros</h2>\n      <table>\n        <thead>\n          <tr>\n            <th>Nome do Livro</th>\n            <th>Autor</th>\n            <th>Número de Páginas</th>\n          </tr>\n        </thead>\n        <tbody>\n          {booksWithAuthors.map((book, index) => (\n            <tr key={index}>\n              <td>{book.name}</td>\n              <td>{book.authorName}</td>\n              <td>{book.pages || 'N/A'}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default BooksList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}