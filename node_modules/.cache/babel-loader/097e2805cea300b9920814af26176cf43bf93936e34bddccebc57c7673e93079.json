{"ast":null,"code":"var _jsxFileName = \"/Users/matheusferreira/Desktop/desafio-contato-seguro/src/App.tsx\",\n  _s = $RefreshSig$();\nimport AuthorForm from \"./components/AuthorForm/AuthorForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const App = () => {\n  _s();\n  // Inicializa o armazenamento local com um array vazio se ainda não houver dados\n  const [authors, setAuthors] = useLocalStorage('authors', []);\n  const handleSaveAuthor = newAuthor => {\n    // Adiciona o novo autor ao array existente ou atualiza um existente\n    const updatedAuthors = [...authors];\n    const index = updatedAuthors.findIndex(author => author.id === newAuthor.id);\n    if (index !== -1) {\n      updatedAuthors[index] = newAuthor; // Atualiza o autor existente\n    } else {\n      updatedAuthors.push(newAuthor); // Adiciona um novo autor\n    }\n    setAuthors(updatedAuthors); // Salva a lista atualizada no LocalStorage\n    console.log('Autor salvo:', newAuthor);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(AuthorForm, {\n      onSave: handleSaveAuthor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"fN9wKOhIpJ/s8sDDdnB1DKU25E0=\", true);\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["AuthorForm","jsxDEV","_jsxDEV","App","_s","authors","setAuthors","useLocalStorage","handleSaveAuthor","newAuthor","updatedAuthors","index","findIndex","author","id","push","console","log","className","children","onSave","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/matheusferreira/Desktop/desafio-contato-seguro/src/App.tsx"],"sourcesContent":["import AuthorForm from \"./components/AuthorForm/AuthorForm\";\nimport { Author } from './models/Author';\n\nexport const App = () =>{\n\n    // Inicializa o armazenamento local com um array vazio se ainda não houver dados\n    const [authors, setAuthors] = useLocalStorage<Author[]>('authors', []);\n\n    const handleSaveAuthor = (newAuthor: Author) => {\n      // Adiciona o novo autor ao array existente ou atualiza um existente\n      const updatedAuthors = [...authors];\n      const index = updatedAuthors.findIndex(author => author.id === newAuthor.id);\n  \n      if (index !== -1) {\n        updatedAuthors[index] = newAuthor; // Atualiza o autor existente\n      } else {\n        updatedAuthors.push(newAuthor); // Adiciona um novo autor\n      }\n  \n      setAuthors(updatedAuthors); // Salva a lista atualizada no LocalStorage\n      console.log('Autor salvo:', newAuthor);\n    };\n    \n  return (\n    <div className=\"App\">\n      <AuthorForm onSave={handleSaveAuthor} />\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,UAAU,MAAM,oCAAoC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG5D,OAAO,MAAMC,GAAG,GAAGA,CAAA,KAAK;EAAAC,EAAA;EAEpB;EACA,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGC,eAAe,CAAW,SAAS,EAAE,EAAE,CAAC;EAEtE,MAAMC,gBAAgB,GAAIC,SAAiB,IAAK;IAC9C;IACA,MAAMC,cAAc,GAAG,CAAC,GAAGL,OAAO,CAAC;IACnC,MAAMM,KAAK,GAAGD,cAAc,CAACE,SAAS,CAACC,MAAM,IAAIA,MAAM,CAACC,EAAE,KAAKL,SAAS,CAACK,EAAE,CAAC;IAE5E,IAAIH,KAAK,KAAK,CAAC,CAAC,EAAE;MAChBD,cAAc,CAACC,KAAK,CAAC,GAAGF,SAAS,CAAC,CAAC;IACrC,CAAC,MAAM;MACLC,cAAc,CAACK,IAAI,CAACN,SAAS,CAAC,CAAC,CAAC;IAClC;IAEAH,UAAU,CAACI,cAAc,CAAC,CAAC,CAAC;IAC5BM,OAAO,CAACC,GAAG,CAAC,cAAc,EAAER,SAAS,CAAC;EACxC,CAAC;EAEH,oBACEP,OAAA;IAAKgB,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBjB,OAAA,CAACF,UAAU;MAACoB,MAAM,EAAEZ;IAAiB;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrC,CAAC;AAEV,CAAC;AAAApB,EAAA,CAzBYD,GAAG;AAAAsB,EAAA,GAAHtB,GAAG;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}