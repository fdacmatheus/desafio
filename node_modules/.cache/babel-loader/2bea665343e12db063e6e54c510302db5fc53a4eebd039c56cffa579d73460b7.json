{"ast":null,"code":"var _jsxFileName = \"/Users/matheusferreira/Desktop/desafio-contato-seguro/src/components/AuthorForm/AuthorForm.tsx\";\nimport React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthorForm = ({\n  onSave,\n  initialData = {\n    name: '',\n    email: ''\n  }\n}) => {\n  const validate = values => {\n    const errors = {};\n    if (!values.name) {\n      errors.name = 'Nome é obrigatório';\n    }\n    if (!values.email) {\n      errors.email = 'Email é obrigatório';\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n      errors.email = 'Email inválido';\n    }\n    return errors;\n  };\n  const generateId = () => {\n    // Gera um ID aleatório entre 1 e 999999\n    return Math.floor(Math.random() * 999999) + 1;\n  };\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: initialData,\n    validate: validate,\n    onSubmit: (values, actions) => {\n      // Se o ID não existir, gera um novo\n      const id = initialData.id || generateId().toString();\n      onSave({\n        id,\n        ...values\n      });\n      actions.setSubmitting(false);\n    },\n    children: ({\n      isSubmitting\n    }) => /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Field, {\n        type: \"text\",\n        name: \"name\",\n        placeholder: \"Nome do Autor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        name: \"name\",\n        component: \"div\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        type: \"email\",\n        name: \"email\",\n        placeholder: \"Email do Autor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        name: \"email\",\n        component: \"div\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: isSubmitting,\n        children: \"Salvar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_c = AuthorForm;\nexport default AuthorForm;\nvar _c;\n$RefreshReg$(_c, \"AuthorForm\");","map":{"version":3,"names":["React","Formik","Form","Field","ErrorMessage","jsxDEV","_jsxDEV","AuthorForm","onSave","initialData","name","email","validate","values","errors","test","generateId","Math","floor","random","initialValues","onSubmit","actions","id","toString","setSubmitting","children","isSubmitting","type","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","component","disabled","_c","$RefreshReg$"],"sources":["/Users/matheusferreira/Desktop/desafio-contato-seguro/src/components/AuthorForm/AuthorForm.tsx"],"sourcesContent":["import React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { Author } from '../../models/Author';\n\ninterface AuthorFormProps {\n  onSave: (author: Author) => void;\n  initialData?: Author;\n}\n\nconst AuthorForm: React.FC<AuthorFormProps> = ({ onSave, initialData = { name: '', email: '' } }) => {\n\n  const validate = (values: Author) => {\n    const errors: Record<string, string> = {};\n    if (!values.name) {\n      errors.name = 'Nome é obrigatório';\n    }\n    if (!values.email) {\n      errors.email = 'Email é obrigatório';\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n      errors.email = 'Email inválido';\n    }\n    return errors;\n  };\n\n  const generateId = () => {\n    // Gera um ID aleatório entre 1 e 999999\n    return Math.floor(Math.random() * 999999) + 1;\n  };\n\n  return (\n    <Formik\n      initialValues={initialData}\n      validate={validate}\n      onSubmit={(values, actions) => {\n        // Se o ID não existir, gera um novo\n        const id = initialData.id || generateId().toString();\n        onSave({ id, ...values });\n        actions.setSubmitting(false);\n      }}\n    >\n      {({ isSubmitting }) => (\n        <Form>\n          <Field type=\"text\" name=\"name\" placeholder=\"Nome do Autor\" />\n          <ErrorMessage name=\"name\" component=\"div\" />\n\n          <Field type=\"email\" name=\"email\" placeholder=\"Email do Autor\" />\n          <ErrorMessage name=\"email\" component=\"div\" />\n\n          <button type=\"submit\" disabled={isSubmitting}>\n            Salvar\n          </button>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default AuthorForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}