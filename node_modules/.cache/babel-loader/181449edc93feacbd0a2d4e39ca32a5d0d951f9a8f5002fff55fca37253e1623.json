{"ast":null,"code":"var _jsxFileName = \"/Users/matheusferreira/Desktop/desafio-contato-seguro/src/components/AuthorForm/AuthorForm.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Formik } from 'formik';\nimport useLocalStorage from '../LocalStorage/useLocalStorage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthorForm = ({\n  onSave,\n  initialData = {\n    name: '',\n    email: ''\n  }\n}) => {\n  _s();\n  const [authors] = useLocalStorage('authors', []);\n  const generateId = () => {\n    return (authors.length + 1).toString();\n  };\n  const validate = values => {\n    const errors = {};\n    // ... validação existente\n    return errors;\n  };\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: initialData,\n    validate: validate,\n    onSubmit: (values, actions) => {\n      const authorToSave = initialData.id ? values : {\n        ...values,\n        id: generateId()\n      };\n      onSave(authorToSave);\n      actions.setSubmitting(false);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthorForm, \"NRzwgsaTh+246xbNVaGvKdrar9o=\", false, function () {\n  return [useLocalStorage];\n});\n_c = AuthorForm;\nexport default AuthorForm;\nvar _c;\n$RefreshReg$(_c, \"AuthorForm\");","map":{"version":3,"names":["React","Formik","useLocalStorage","jsxDEV","_jsxDEV","AuthorForm","onSave","initialData","name","email","_s","authors","generateId","length","toString","validate","values","errors","initialValues","onSubmit","actions","authorToSave","id","setSubmitting","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/matheusferreira/Desktop/desafio-contato-seguro/src/components/AuthorForm/AuthorForm.tsx"],"sourcesContent":["import React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { Author } from '../../models/Author';\nimport useLocalStorage from '../LocalStorage/useLocalStorage';\n\ninterface AuthorFormProps {\n  onSave: (author: Author) => void;\n  initialData?: Author;\n}\n\nconst AuthorForm: React.FC<AuthorFormProps> = ({ onSave, initialData = { name: '', email: '' } }) => {\n  const [authors] = useLocalStorage<Author[]>('authors', []);\n\n  const generateId = () => {\n    return (authors.length + 1).toString();\n  };\n\n  const validate = (values: Author) => {\n    const errors: Record<string, string> = {};\n    // ... validação existente\n    return errors;\n  };\n\n  return (\n    <Formik\n      initialValues={initialData}\n      validate={validate}\n      onSubmit={(values, actions) => {\n        const authorToSave = initialData.id ? values : { ...values, id: generateId() };\n        onSave(authorToSave);\n        actions.setSubmitting(false);\n      }}\n    >\n      {/* ... resto do Formik */}\n    </Formik>\n  );\n};\n\nexport default AuthorForm;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAmC,QAAQ;AAE1D,OAAOC,eAAe,MAAM,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAO9D,MAAMC,UAAqC,GAAGA,CAAC;EAAEC,MAAM;EAAEC,WAAW,GAAG;IAAEC,IAAI,EAAE,EAAE;IAAEC,KAAK,EAAE;EAAG;AAAE,CAAC,KAAK;EAAAC,EAAA;EACnG,MAAM,CAACC,OAAO,CAAC,GAAGT,eAAe,CAAW,SAAS,EAAE,EAAE,CAAC;EAE1D,MAAMU,UAAU,GAAGA,CAAA,KAAM;IACvB,OAAO,CAACD,OAAO,CAACE,MAAM,GAAG,CAAC,EAAEC,QAAQ,CAAC,CAAC;EACxC,CAAC;EAED,MAAMC,QAAQ,GAAIC,MAAc,IAAK;IACnC,MAAMC,MAA8B,GAAG,CAAC,CAAC;IACzC;IACA,OAAOA,MAAM;EACf,CAAC;EAED,oBACEb,OAAA,CAACH,MAAM;IACLiB,aAAa,EAAEX,WAAY;IAC3BQ,QAAQ,EAAEA,QAAS;IACnBI,QAAQ,EAAEA,CAACH,MAAM,EAAEI,OAAO,KAAK;MAC7B,MAAMC,YAAY,GAAGd,WAAW,CAACe,EAAE,GAAGN,MAAM,GAAG;QAAE,GAAGA,MAAM;QAAEM,EAAE,EAAEV,UAAU,CAAC;MAAE,CAAC;MAC9EN,MAAM,CAACe,YAAY,CAAC;MACpBD,OAAO,CAACG,aAAa,CAAC,KAAK,CAAC;IAC9B;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGI,CAAC;AAEb,CAAC;AAACjB,EAAA,CA1BIL,UAAqC;EAAA,QACvBH,eAAe;AAAA;AAAA0B,EAAA,GAD7BvB,UAAqC;AA4B3C,eAAeA,UAAU;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}